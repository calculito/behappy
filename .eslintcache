[{"/Users/ion/Documents/own projects/minuut/src/index.js":"1","/Users/ion/Documents/own projects/minuut/src/registerserviceWorker.js":"2","/Users/ion/Documents/own projects/minuut/src/App.js":"3","/Users/ion/Documents/own projects/minuut/src/Info.js":"4","/Users/ion/Documents/own projects/minuut/src/Anger.js":"5","/Users/ion/Documents/own projects/minuut/src/Thank.js":"6","/Users/ion/Documents/own projects/minuut/src/Grid.js":"7","/Users/ion/Documents/own projects/minuut/src/Decision.js":"8","/Users/ion/Documents/own projects/minuut/src/Idea.js":"9","/Users/ion/Documents/own projects/minuut/src/Word.js":"10","/Users/ion/Documents/own projects/minuut/src/Exercise.js":"11","/Users/ion/Documents/own projects/minuut/src/Breath.js":"12","/Users/ion/Documents/own projects/minuut/src/Time.js":"13","/Users/ion/Documents/own projects/minuut/src/Haiku.js":"14","/Users/ion/Documents/own projects/minuut/src/Grate.js":"15","/Users/ion/Documents/own projects/minuut/src/Footer.js":"16","/Users/ion/Documents/own projects/minuut/src/Takenotes.js":"17","/Users/ion/Documents/own projects/minuut/src/Quote.js":"18","/Users/ion/Documents/own projects/minuut/src/Forgive.js":"19","/Users/ion/Documents/own projects/minuut/src/Art.js":"20","/Users/ion/Documents/own projects/minuut/src/Meditation.js":"21","/Users/ion/Documents/own projects/minuut/src/ShowNotes.js":"22","/Users/ion/Documents/own projects/minuut/src/Flower.js":"23","/Users/ion/Documents/own projects/minuut/src/ShowOneNote.js":"24","/Users/ion/Documents/own projects/minuut/src/Bemerkung.js":"25","/Users/ion/Documents/own projects/minuut/src/Timer.js":"26","/Users/ion/Documents/own projects/minuut/src/Piano.js":"27","/Users/ion/Documents/own projects/minuut/src/Instrument.js":"28","/Users/ion/Documents/own projects/minuut/src/InstrumentAudio.js":"29","/Users/ion/Documents/own projects/minuut/src/GetNotesBetween.js":"30","/Users/ion/Documents/own projects/minuut/src/Notes.js":"31","/Users/ion/Documents/own projects/minuut/src/AudioPlayer.js":"32","/Users/ion/Documents/own projects/minuut/src/AudioContext.js":"33"},{"size":497,"mtime":1605731847668,"results":"34","hashOfConfig":"35"},{"size":4055,"mtime":1605727767502,"results":"36","hashOfConfig":"35"},{"size":3260,"mtime":1609111901852,"results":"37","hashOfConfig":"35"},{"size":1051,"mtime":1603915167516,"results":"38","hashOfConfig":"35"},{"size":3161,"mtime":1609146320781,"results":"39","hashOfConfig":"35"},{"size":2503,"mtime":1609146370749,"results":"40","hashOfConfig":"35"},{"size":1811,"mtime":1607862431921,"results":"41","hashOfConfig":"35"},{"size":2149,"mtime":1606766701093,"results":"42","hashOfConfig":"35"},{"size":1760,"mtime":1605456198783,"results":"43","hashOfConfig":"35"},{"size":2773,"mtime":1606765530639,"results":"44","hashOfConfig":"35"},{"size":2981,"mtime":1607777609099,"results":"45","hashOfConfig":"35"},{"size":1565,"mtime":1604308834342,"results":"46","hashOfConfig":"35"},{"size":546,"mtime":1606765516665,"results":"47","hashOfConfig":"35"},{"size":4213,"mtime":1606765467176,"results":"48","hashOfConfig":"35"},{"size":3955,"mtime":1609146313925,"results":"49","hashOfConfig":"35"},{"size":2439,"mtime":1609174659200,"results":"50","hashOfConfig":"35"},{"size":3877,"mtime":1609111808324,"results":"51","hashOfConfig":"35"},{"size":3973,"mtime":1606765497447,"results":"52","hashOfConfig":"35"},{"size":3089,"mtime":1609146347544,"results":"53","hashOfConfig":"35"},{"size":13776,"mtime":1606765403539,"results":"54","hashOfConfig":"35"},{"size":1416,"mtime":1606766682374,"results":"55","hashOfConfig":"35"},{"size":5068,"mtime":1609099838118,"results":"56","hashOfConfig":"35"},{"size":6116,"mtime":1606765451303,"results":"57","hashOfConfig":"35"},{"size":3837,"mtime":1609110826818,"results":"58","hashOfConfig":"35"},{"size":204,"mtime":1608979704772,"results":"59","hashOfConfig":"35"},{"size":708,"mtime":1608912178331,"results":"60","hashOfConfig":"35"},{"size":2392,"mtime":1605456515029,"results":"61","hashOfConfig":"35"},{"size":1815,"mtime":1605458044198,"results":"62","hashOfConfig":"35"},{"size":754,"mtime":1605456444909,"results":"63","hashOfConfig":"35"},{"size":243,"mtime":1605455704807,"results":"64","hashOfConfig":"35"},{"size":310,"mtime":1605455715582,"results":"65","hashOfConfig":"35"},{"size":788,"mtime":1605455726987,"results":"66","hashOfConfig":"35"},{"size":65,"mtime":1605455731426,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"g9shi4",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/ion/Documents/own projects/minuut/src/index.js",["151"],"import React, { lazy, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport registerserviceWorker from \"./registerserviceWorker\";\nconst App = lazy(() => import(\"./App\"));\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense\n      fallback={\n        <div className=\"full-page-loader\">\n          <img width=\"200\" src=\"./logo192.png\" alt=\"logo\" />\n        </div>\n      }\n    >\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["152","153"],"/Users/ion/Documents/own projects/minuut/src/registerserviceWorker.js",[],"/Users/ion/Documents/own projects/minuut/src/App.js",["154","155","156"],"import React, { useState, app, useEffect } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./Grid\";\nimport Decision from \"./Decision\";\nimport Info from \"./Info\";\nimport Idea from \"./Idea\";\nimport Anger from \"./Anger\";\nimport Forgive from \"./Forgive\";\nimport Exercise from \"./Exercise\";\nimport Thank from \"./Thank\";\nimport Flower from \"./Flower\";\nimport Word from \"./Word\";\nimport Meditate from \"./Meditation\";\nimport Haiku from \"./Haiku\";\nimport Time from \"./Time\";\nimport Breath from \"./Breath\";\nimport Grate from \"./Grate\";\nimport Quote from \"./Quote\";\nimport Art from \"./Art\";\nimport Footer from \"./Footer\";\nimport Swal from \"sweetalert2\";\nimport Takenotes from \"./Takenotes\";\nimport ShowNotes from \"./ShowNotes\";\nimport ShowOneNote from \"./ShowOneNote\";\n\nexport default function App() {\n  const [whichIndex, setwhichIndex] = useState(0);\n  const [idSingleNote, setidSingleNote] = useState(0);\n  const [cat, setcat] = useState(0);\n  const [stars, setstars] = useState(0);\n  const [id, setid] = useState(0);\n  const [title, settitle] = useState(0);\n  const [note, setnote] = useState(0);\n\n  useEffect(() => {\n    Swal.fire({\n      title: \"Welcome!\",\n      text:\n        \"Take a break of 60 seconds and enjoy the beauty of flowers, the power of positive quotes or get rid of anger and stress!\",\n      confirmButtonText: \"Ok, got it\",\n    });\n  }, []);\n\n  async function chooseIndex(i) {\n    await fetch(\n      \"https://dashybackend.herokuapp.com/postwindowbehappy/\".concat(i),\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    setwhichIndex(i);\n  }\n  function changeIndex(i, cat, stars, id, title, note) {\n    setwhichIndex(i);\n    setcat(cat);\n    setstars(stars);\n    setidSingleNote(id);\n    settitle(title);\n    setnote(note);\n  }\n  return (\n    <>\n      {\n        {\n          0: <Grid onGridClick={chooseIndex} />,\n          1: <Flower onGridClick={chooseIndex} />,\n          2: <Word onGridClick={chooseIndex} />,\n          3: <Meditate onGridClick={chooseIndex} />,\n          4: <Grate onGridClick={chooseIndex} />,\n          5: <Quote onGridClick={chooseIndex} />,\n          6: <Art onGridClick={chooseIndex} />,\n          7: <Exercise onGridClick={chooseIndex} />,\n          8: <Breath onGridClick={chooseIndex} />,\n          9: <Thank onGridClick={chooseIndex} />,\n          10: <Haiku onGridClick={chooseIndex} />,\n          11: <Time onGridClick={chooseIndex} />,\n          12: <Forgive onGridClick={chooseIndex} />,\n          13: <Anger onGridClick={chooseIndex} whichIndex={whichIndex} />,\n          14: <Decision onGridClick={chooseIndex} />,\n          15: <Idea onGridClick={chooseIndex} />,\n          16: <Info />,\n          17: <ShowNotes onAddClick={changeIndex} whichIndex={whichIndex} />,\n          18: <Takenotes onLupeClick={changeIndex} whichIndex={whichIndex} />,\n          19: (\n            <ShowOneNote\n              onAddClick={changeIndex}\n              whichIndex={whichIndex}\n              cat={cat}\n              stars={stars}\n              idSingleNote={idSingleNote}\n              title={title}\n              note={note}\n            />\n          ),\n        }[whichIndex]\n      }\n      <Footer onFooterClick={chooseIndex} whichIndex={whichIndex} />\n    </>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Info.js",[],"/Users/ion/Documents/own projects/minuut/src/Anger.js",["157"],"import React, { useState } from \"react\";\nimport Timer from \"./Timer\";\nimport Swal from \"sweetalert2\";\nimport Bemerkung from \"./Bemerkung\";\nexport default function Anger({ onGridClick }) {\n  const allangers = [\n    \"I know, sometimes the cost of an impulsive and angry reaction can be so large that you wouldn’t able to buy your words or actions back even if you were a billionaire. So, I won't say FUCK YOU!\",\n    \"Sometimes it is easier to repair a broken wall than to mend a broken relationship. Sometimes it is not. However, we need a new flat.\",\n    \"I would like to answer you RIGHT NOW but I just decided to take a walk.\",\n    \"You'll get the answer as soon as I calmed down.\",\n    \"I know you're waiting for an answer, but I have to punch the ball for the next two hours. PS: please, try to stay away.\",\n    \"Do you know 'Before he cheats' by Carrie Underwood? That's so strange, they play it now for the third time in a row.\",\n    \"Whatever you just tried to tell me, can you repeat it in a way that doesn't make me angry?\",\n    \"At this moment I am observing my feelings of anger are present.\",\n    \"I didn't quite get it. There is a certain reason for your unclarity?\",\n    \"I appreciate your words, now I would appreciate your silence.\",\n    \"For the moment I have very natural and healthy feelings, like... ANGER.\",\n    \"Accidents and mistakes can happen everyday and to everyone, let's try to fix the problem.\",\n    \"Any attempt to communicate in my usual rational and cool way would fail right now. Give me some time.\",\n    \"My brain is quite emotional at the moment. Waiting to see things more clearly again.\",\n    \"I don't know exactly if I'm sad or hurt or something else. Let me find that out.\",\n    \"I don't want to blame you. Maybe I am just hungry, tired, overworked, stressed or simply unhappy and you're only my FUCKING or EVEN NOT HUSBAND!\",\n    \"Let me see if I'm still angry after I change the perspective over the situation.\",\n    \"Can you please tell me WHY you're doing WHAT you're doing? I really mean it, I wish to understand.\",\n    \"Give me the time and the opportunity to build up the respect and the consideration you think you deserve.\",\n    \"Share with me your perspective, I will do the same with mine, since I think there is a discrepancy.\",\n    \"I don't want to ignore you, but for the moment might be the best thing for both of us.\",\n    \"I don't really feel great. How do you feel?\",\n  ];\n  const angerchosen = (i) => {\n    Swal.fire({\n      title: \"Nice!\",\n      text:\n        \"Now open your messaging app, paste the copied text there and send your message!\",\n      confirmButtonText: \"OK\",\n    });\n    navigator.clipboard.writeText(allangers[i]);\n  };\n  return (\n    <div className=\"containerColumnDashed\">\n      <Timer onGridClick={onGridClick} />\n      <Bemerkung />\n      <div className=\"containergrates\">\n        {allangers.map((data, i) => {\n          return (\n            <div\n              key={\"angers\" + i}\n              className={\"papernotesreihen\"}\n              onClick={() => angerchosen(i)}\n            >\n              {data}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Thank.js",["158"],"import React, { useState } from \"react\";\nimport Timer from \"./Timer\";\nimport Swal from \"sweetalert2\";\nimport Bemerkung from \"./Bemerkung\";\nexport default function Thank({ onGridClick }) {\n  const allthanks = [\n    \"Thank you for all your hard work on this\",\n    \"Thanks again, we couldn’t have pulled this off without you\",\n    \"Thank you, you’re amazing!\",\n    \"I’m so thankful for everything you bring to the table\",\n    \"Thank you kindly\",\n    \"Warmest thanks\",\n    \"I truly appreciate your hard work\",\n    \"From the bottom of my heart, thank you\",\n    \"Please accept my deepest thanks\",\n    \"I can’t thank you enough\",\n    \"Grateful for your support\",\n    \"I appreciate your thoughtfulness, you’ve made my day!\",\n    \"Thank you for going above and beyond!\",\n    \"Thanks for being in my corner\",\n    \"So glad you’re on my team\",\n    \"I appreciate your assistance and look forward to your continuing to work on our account.\",\n    \"Thanks very much for the assistance you provide my business. It is sincerely appreciated.\",\n    \"I wanted to express my personal gratitude for the effort and extra time you have contributed\",\n    \"I would like to thank you and your staff for the opportunity to meet with you.\",\n    \"Thank you for such a wonderful contribution.\",\n    \"A BIG thank you with a lot of love\",\n    \"Thankful and grateful to have you as a friend.\",\n    \"We’d love to express our gratitude for your generous gift.\",\n    \"A heartfelt thank you for all that you’ve done.\",\n    \"You made my day!\",\n    \"I’m humbled and appreciative of all you’ve done on our behalf.\",\n    \"The world is full of wonderful things like you!\",\n    \"Our highest appreciation for your kindness.\",\n    \"At this difficult time, it’s so nice to feel appreciated.\",\n  ];\n  const thankschosen = (i) => {\n    Swal.fire({\n      title: \"Nice!\",\n      text:\n        \"Now open your messaging app, paste the copied text there and send your message!\",\n      confirmButtonText: \"OK\",\n    });\n    navigator.clipboard.writeText(allthanks[i]);\n  };\n  return (\n    <div className=\"containerColumnDashed\">\n      <Timer onGridClick={onGridClick} />\n      <Bemerkung />\n      <div className=\"containergrates\">\n        {allthanks.map((data, i) => {\n          return (\n            <div\n              key={\"thanks\" + i}\n              className={\"papernotesreihen\"}\n              onClick={() => thankschosen(i)}\n            >\n              {data}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Grid.js",[],"/Users/ion/Documents/own projects/minuut/src/Decision.js",[],"/Users/ion/Documents/own projects/minuut/src/Idea.js",["159"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport Piano from \"./Piano\";\nexport default function Idea({ onGridClick }) {\n  const [idea, setidea] = useState(undefined);\n  const [counter, setCounter] = React.useState(60);\n\n  const sendit = () => {\n    Swal.fire({\n      title: \"Perfect!\",\n      text: \"We hope you feel better now...\",\n      icon: \"success\",\n      confirmButtonText: \"Yes, I do...\",\n    });\n    changestatus(idea);\n  };\n\n  React.useEffect(() => {\n    const timer =\n      counter > 0 ? setInterval(() => setCounter(counter - 1), 1000) : sendit();\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  async function changestatus(idea) {\n    const data = { ideadb: idea };\n    await fetch(\n      \"https://dashybackend.herokuapp.com/postwindowbehappy/\".concat(idea),\n      {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    setidea(undefined);\n    onGridClick(0);\n  }\n\n  return (\n    <div className=\"containerColumn\">\n      <Piano />\n      <div className=\"timer\">{counter}</div>\n      <form className=\"form\">\n        <textarea\n          className=\"bigWindowForText\"\n          autoFocus\n          type=\"text\"\n          placeholder=\"That is just a placeholder. Type your text to describe your idea. Happiness is a now thing. Don't wait until later to be happy. Share your idea, how you manage to feel better...\"\n          value={idea}\n          onChange={(e) => setidea(e.target.value)}\n          required\n        />\n      </form>\n      <div className=\"minitext\">\n        <a href=\"https://www.happier.com/blog/25-ways-to-feel-happier-in-the-next-5-minutes/\">\n          see here more...\n        </a>\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Word.js",[],"/Users/ion/Documents/own projects/minuut/src/Exercise.js",["160","161"],"import React from \"react\";\nimport Timer from \"./Timer\";\nimport HeadTurn from \"./images/headturn.png\";\nimport HeadTurn1 from \"./images/headturn1.png\";\nimport SideNeckStretch from \"./images/sideneckstretch.png\";\nimport SideNeckStretch1 from \"./images/sideneckstretch1.png\";\nimport ShoulderStretch from \"./images/shoulderstretch.png\";\nimport ShoulderStretch1 from \"./images/shoulderstretch1.png\";\nimport UpperArmStretch from \"./images/upperarmstretch.png\";\nimport UpperArmStretch1 from \"./images/upperarmstretch1.png\";\nimport StandingChestStretch from \"./images/standingcheststretch.png\";\nimport StandingChestStretch1 from \"./images/standingcheststretch1.png\";\nexport default function Exercise({ onGridClick }) {\n  const [exercise, setExercise] = React.useState(0);\n  const [counter, setCounter] = React.useState(5);\n\n  const description = [\n    \"Rotate your chin towards your RIGHT shoulder. Hold...\",\n    \"Rotate your chin towards your LEFT shoulder. Hold...\",\n    \"Slowly turn your head to the RIGHT until you feel a stretch in the side of your neck and shoulder. Hold...\",\n    \"Slowly turn your head to the LEFT until you feel a stretch in the side of your neck and shoulder. Hold...\",\n    \"Raise one arm to shoulder height, and reach it across your chest. Pull the arm slightly toward you with your other arm. Hold...\",\n    \"Raise one arm to shoulder height, and reach it across your chest. Pull the arm slightly toward you with your other arm. Hold...\",\n    \"Bring one arm overhead and drop your forearm behind you. With your other hand, grab right above your bent elbow and pull gently...\",\n    \"Bring one arm overhead and drop your forearm behind you. With your other hand, grab right above your bent elbow and pull gently...\",\n    \"Take the arms behind you. Straighten the arms and gently lift your hands up until you feel a stretch in your chest.\",\n  ];\n  const images = {\n    0: HeadTurn,\n    1: HeadTurn1,\n    2: SideNeckStretch,\n    3: SideNeckStretch1,\n    4: ShoulderStretch,\n    5: ShoulderStretch1,\n    6: UpperArmStretch,\n    7: UpperArmStretch1,\n    8: StandingChestStretch,\n  };\n  React.useEffect(() => {\n    const timer =\n      counter > 0 ? setInterval(() => setCounter(counter - 1), 1000) : change();\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const change = () => {\n    exercise < 10\n      ? setExercise(() => setExercise(exercise + 1))\n      : setExercise(() => setExercise(0));\n    setCounter(() => setCounter(7));\n  };\n\n  return (\n    <div className=\"containerColumn\">\n      <Timer onGridClick={onGridClick} />\n      <div className=\"containerColumn\">\n        <img\n          key={images[exercise]}\n          className=\"bigPictureBreath\"\n          src={images[exercise]}\n          alt={images[exercise]}\n        />\n        <span className=\"haikusmall\">\n          <br></br>\n          {description[exercise]}\n          <br></br>\n          {counter}\n        </span>\n      </div>\n    </div>\n  );\n}\n//Avoid stretches that cause pain or discomfort.\n","/Users/ion/Documents/own projects/minuut/src/Breath.js",["162"],"import React from \"react\";\nimport Timer from \"./Timer\";\nimport BreathIn from \"./images/breathin.png\";\nimport BreathOut from \"./images/breathout.png\";\nimport StopBreath from \"./images/stopbreath.png\";\nexport default function Breath({ onGridClick }) {\n  const time = [4, 7, 8];\n  const [exercise, setExercise] = React.useState(0);\n  const [counter, setCounter] = React.useState(5);\n\n  const description = [\n    \"Sit or lie flat in a comfortable position, breath out - start in \",\n    \"breathe in quietly through the nose \",\n    \"hold the breath \",\n    \"exhale forcefully through the mouth, pursing the lips and making a 'whoosh' sound \",\n  ];\n  const images = {\n    0: BreathOut,\n    1: BreathIn,\n    2: StopBreath,\n    3: BreathOut,\n  };\n  React.useEffect(() => {\n    const timer =\n      counter > 0 ? setInterval(() => setCounter(counter - 1), 1000) : change();\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const change = () => {\n    exercise < 3\n      ? setExercise(() => setExercise(exercise + 1))\n      : setExercise(() => setExercise(0));\n    setCounter(() => setCounter(time[exercise]));\n  };\n\n  return (\n    <div className=\"containerColumn\">\n      <Timer onGridClick={onGridClick} />\n      <div className=\"containerColumn\">\n        <img\n          key={images[exercise]}\n          className=\"bigPictureBreath\"\n          src={images[exercise]}\n          alt={images[exercise]}\n        />\n        <span className=\"haikusmall\">\n          {description[exercise]}\n          <br></br>\n          {counter}\n        </span>\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Time.js",[],"/Users/ion/Documents/own projects/minuut/src/Haiku.js",[],"/Users/ion/Documents/own projects/minuut/src/Grate.js",["163","164"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport Timer from \"./Timer\";\nimport Bemerkung from \"./Bemerkung\";\nexport default function Grate({ onGridClick }) {\n  const [gift, setgift] = useState(undefined);\n  const allgrates = [\n    \"Wishing you all the happiness your holiday can hold!\",\n    \"May your family have a holiday season that is full of wonderful surprises, treats and nonstop laughter.\",\n    \"I wish we could be together this holiday season, but I'm sending warm wishes your way.\",\n    \"I know it's been a hard year for you and your family. I hope the New Year brings better days.\",\n    \"Warmest wishes that you can find in this shadowy time.\",\n    \"Wishing you a Happy New Year with the hope that you will have many blessings in the year to come.\",\n    \"Out with the old, in with the new: may you be happy the whole year through. Happy New Year!\",\n    \"I resolve to stop wasting my resolutions on myself and use them to repay you for the warmth you’ve shown me. Happy New Year!\",\n    \"Nights will be dark but days will be light, wishing your life to be always bright – Happy New Year.\",\n    \"As the New Year dawns, I hope it is filled with the promises of a brighter tomorrow. Happy New Year!\",\n    \"No one can go back in time to change what has happened, so work on your present to make yourself a wonderful future.\",\n    \"Every year we try to diet and exercise. Maybe this year our plans will actually work. Happy New Year, friend.\",\n    \"You made last year so special for me. It is my greatest wish that this coming year be special for you.\",\n    \"I wish you to look forward to the upcoming year with confidence and courage, giving wings to your dreams! Live your life to the fullest extent, Happy New Year!\",\n    \"My sister, my first friend, my constant support: In the coming year, I wish you all of the blessings you truly deserve. I love you, Sis.\",\n    \"To my awesome brother: thank you for the fun and sometimes embarrassing memories we share. Let’s keep that tradition going in the upcoming year. Happy New Year.\",\n    \"Happy New Year, Grandma. I wish you a bright New Year, just like every year you have brightened in my life. Thank you.\",\n    \"Happy new year, my love. I hope that each of my remaining years starts and ends with you.\",\n    \"I love you more today than I loved you yesterday. And I will love you more tomorrow than I love you today. Happy New Year, My Love!\",\n    \"May the New Year bring you happiness, peace, and prosperity. Wishing you a joyous 2021!\",\n    \"Happy new year to the sweetest person alive. Thanks for being in my life.\",\n    \"My only wish for this New Year is that I want to love you more than ever, take care of you more than ever and make you happier more than ever. Happy new year!\",\n    \"I wish to have a year filled with happiness and strength to overcome all the dark hours. You are a true blessing. Happy New Year, love.\",\n    \"Life is full of ups and downs but thanks to you guys, I can never feel down. Thanks for being my support. I love you so much. Happy New Year. May God bless you.\",\n    \"Fresh HOPES, Fresh PLANS, Fresh EFFORTS, Fresh FEELINGS, Fresh COMMITMENT. Welcome 2021 with a fresh ATTITUDE. Happy New Year.\",\n  ];\n  const gratechosen = (i) => {\n    Swal.fire({\n      title: \"Nice!\",\n      text:\n        \"Now open your messaging app, paste the copied text there and send your message!\",\n      confirmButtonText: \"OK\",\n    });\n    navigator.clipboard.writeText(allgrates[i]);\n  };\n  return (\n    <div className=\"containerColumnDashed\">\n      <Timer onGridClick={onGridClick} />\n      <Bemerkung />\n      <div className=\"containergrates\">\n        {allgrates.map((data, i) => {\n          return (\n            <div\n              key={\"grates\" + i}\n              className={\"papernotesreihen\"}\n              onClick={() => gratechosen(i)}\n            >\n              {data}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Footer.js",["165"],"/Users/ion/Documents/own projects/minuut/src/Takenotes.js",["166"],"import React, { useState } from \"react\";\nimport { isNotEmittedStatement } from \"typescript\";\nimport Swal from \"sweetalert2\";\nimport add from \"../src/images/+.png\";\nimport dele from \"../src/images/X.png\";\nimport lupe from \"../src/images/L.png\";\nimport starblack from \"../src/images/starblack.png\";\nimport stargold from \"../src/images/stargold.png\";\n\nexport default function Takenotes({ onLupeClick, whichIndex }) {\n  const [title, settitle] = useState(undefined);\n  const [note, setnote] = useState(undefined);\n  const [cat, setcat] = useState(0);\n  const [stars, setstars] = useState(0);\n  const categories = [\"TEXT\", \"BOOK\", \"IDEA\", \"PERS\", \"ARTA\"];\n  const bgcolors = [\n    \"lightgray\",\n    \"lightpink\",\n    \"lightgreen\",\n    \" lightsalmon\",\n    \"lightblue\",\n    \"gold\",\n  ];\n  const del = () => {\n    setnote(undefined);\n    settitle(undefined);\n    setcat(0);\n    setstars(0);\n    Array.from(document.querySelectorAll(\"textarea\")).forEach(\n      (input) => (input.value = \"\")\n    );\n  };\n  const savenew = () => {\n    note !== undefined ? newnote() : sendit();\n  };\n\n  async function newnote() {\n    var datenow = new Date();\n    const data = {\n      notetitle: title,\n      notetext: note,\n      stars: stars,\n      savetime: datenow,\n    };\n    await fetch(\"https://dashybackend.herokuapp.com/postnewnote/\".concat(cat), {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    del();\n    Swal.fire({\n      title: \"Nice!\",\n      text: \"note saved...\",\n      icon: \"success\",\n      confirmButtonText: \"OK\",\n    });\n  }\n\n  const sendit = () => {\n    Swal.fire({\n      title: \"Hey!\",\n      text: \"no content in your note...\",\n      icon: \"warning\",\n      confirmButtonText: \"OK\",\n    });\n  };\n\n  function StarsGen() {\n    let starsall = [];\n    for (let i = 0; i < 5; i++) {\n      starsall.push(\n        <img\n          className=\"starSymbols\"\n          src={stars > i ? stargold : starblack}\n          alt=\"star\"\n          key={i}\n          onClick={() => setstars(i + 1)}\n        />\n      );\n    }\n    return starsall;\n  }\n\n  const onLupeClick1 = () => {\n    whichIndex === 17 ? onLupeClick(0) : onLupeClick(17);\n  };\n\n  return (\n    <div className=\"containerColumn\">\n      <div className=\"bigTextcolumn\">\n        <div className=\"iconscontainer\">\n          <img className=\"icons\" src={dele} alt=\"delete\" onClick={del} />\n          <img\n            className=\"icons\"\n            src={lupe}\n            alt=\"lupe\"\n            onClick={() => onLupeClick1(18)}\n          />\n          <img className=\"icons\" src={add} alt=\"add\" onClick={savenew} />\n        </div>\n\n        <textarea\n          style={{\n            backgroundColor: bgcolors[cat],\n          }}\n          name=\"title\"\n          className=\"title\"\n          autoFocus\n          type=\"text\"\n          placeholder={title === undefined ? \"title...\" : undefined}\n          value={title}\n          onChange={(e) => settitle(e.target.value)}\n          required\n        />\n\n        <textarea\n          name=\"notes\"\n          className=\"notes\"\n          type=\"text\"\n          placeholder={note === undefined ? \"write here...\" : undefined}\n          value={note}\n          onChange={(e) => setnote(e.target.value)}\n          required\n        />\n        <div className=\"containercat\">\n          <StarsGen />\n        </div>\n        <div className=\"containercat\">\n          {categories.map((data, i) => {\n            return (\n              <div\n                key={\"cat\" + i}\n                className=\"containercat\"\n                style={{\n                  backgroundColor: bgcolors[i + 1],\n                  fontWeight: cat === i + 1 ? \"bold\" : \"normal\",\n                }}\n                onClick={() => setcat(i + 1)}\n              >\n                {data}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Quote.js",[],"/Users/ion/Documents/own projects/minuut/src/Forgive.js",["167"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport Timer from \"./Timer\";\nimport Bemerkung from \"./Bemerkung\";\nexport default function Forgive({ onGridClick }) {\n  const allforgives = [\n    \"To err is human, to forgive divine! Maybe not quite, but I forgive you!\",\n    \"I forgive you but trust must be earned anew.\",\n    \"I wish I could give you my pain just for one moment. Not to hurt you, but so that you could finally understand how much you hurt me. Still, I forgive you!\",\n    \"You hurt me very much, now you should try to make it right again.\",\n    \"I forgive you, you know not what you have done.\",\n    \"I forgive you, not because you deserve it, but because carrying you on my mind is a burden.\",\n    \"I forgive you, you did not see right from wrong.\",\n    \"I forgive you... for treating me the way you felt about yourself.\",\n    \"I forgive you. Not for you, but for me.\",\n    \"I forgive you... from my heart i know... if you had known better you would have done better...\",\n    \"I forgive you, you forgive me.\",\n    \"I forgive you. Just don't let it ever happen again.\",\n    \"I decided to forgive you. Only because my soul deserves peace.\",\n    \"I never knew how strong I was, until I had to forgive you and pretend that it never happened.\",\n    \"If you’ve been brave enough to apologize, then I’m strong enough to forgive.\",\n    \"I forgive you, because I want to hold on to what we have, rather than remember it as what we had.\",\n    \"I’m not saying that what you’ve done is ok… I’m saying that I believe you, when you say that you’ll never do it again. I forgive you.\",\n    \"You hurt me in a way that I never would have imagined. But I don’t want to spend the rest of my life hating someone I love from deep down inside my heart. I forgive you.\",\n    \"I forgive you, not because I’m weak but because I’m strong enough to let go of the past.\",\n    \"I forgive you, not because I am ok with what you did, but because I need to move on.\",\n    \"Sometimes the burden of forgiveness is easier to carry than the burden of living life without the person you love. And that’s why, I’m willing to put the past behind.\",\n    \"Just because bad things happen, we don’t lose faith in the heavens above. Just because my heart has been broken, I will not stop believe in love. I forgive you.\",\n  ];\n  const forgiveschosen = (i) => {\n    Swal.fire({\n      title: \"Nice!\",\n      text:\n        \"Now open your messaging app, paste the copied text there and send your message!\",\n      confirmButtonText: \"OK\",\n    });\n    navigator.clipboard.writeText(allforgives[i]);\n  };\n  return (\n    <div className=\"containerColumnDashed\">\n      <Timer onGridClick={onGridClick} />\n      <Bemerkung />\n      <div className=\"containergrates\">\n        {allforgives.map((data, i) => {\n          return (\n            <div\n              key={\"forgives\" + i}\n              className={\"papernotesreihen\"}\n              onClick={() => forgiveschosen(i)}\n            >\n              {data}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Art.js",[],"/Users/ion/Documents/own projects/minuut/src/Meditation.js",["168"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport useSound from \"use-sound\";\nimport MeditateSound from \"./images/meditation.mp3\";\nimport Play from \"./images/play.svg\";\nimport Stop from \"./images/stop.svg\";\nimport Timer from \"./Timer\";\nexport default function Meditation({ onGridClick }) {\n  const [play, { stop }] = useSound(MeditateSound);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const sendit = () => {\n    Swal.fire({\n      title: \"C'mon!\",\n      text: `You only have a couple of seconds left...`,\n      confirmButtonText: \"ok...\",\n    });\n  };\n  return (\n    <div className=\"containerColumn\">\n      <Timer onGridClick={onGridClick} />\n\n      <div className=\"bigTextcolumn \">\n        <span className=\"typo\">\n          Press the 'Play' button, close your eyes and enjoy the energy!{\" \"}\n        </span>\n        {isPlaying === false ? (\n          <img\n            key=\"Start\"\n            className=\"logoPlay\"\n            src={Play}\n            alt=\"Play button\"\n            onClick={() => {\n              setIsPlaying(true);\n              play();\n            }}\n          />\n        ) : (\n          <img\n            key=\"Start\"\n            className=\"logoPlay\"\n            src={Stop}\n            alt=\"Play button\"\n            onClick={() => {\n              setIsPlaying(true);\n              sendit();\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/ShowNotes.js",["169"],"import React, { useState, useEffect } from \"react\";\nimport plus from \"../src/images/+.png\";\nimport gliedboxes from \"../src/images/gliedboxes.png\";\nimport gliedreihen from \"../src/images/gliedreihen.png\";\nimport filteron from \"../src/images/filteron.png\";\nimport filteroff from \"../src/images/filteroff.png\";\nimport starblack from \"../src/images/starblack.png\";\nimport stargold from \"../src/images/stargold.png\";\nimport axios from \"axios\";\nimport { setTokenSourceMapRange } from \"typescript\";\n\nexport default function ShowNotes({ onAddClick }) {\n  const [cat, setcat] = useState(0);\n  const [stars, setstars] = useState(0);\n  const [allnotes, setallnotes] = useState(undefined);\n  const [loading, setloading] = useState(null);\n  const [gliederung, setgliederung] = useState(0);\n  const [check, setcheck] = useState(0);\n\n  const categories = [\"TEXT\", \"BOOK\", \"IDEA\", \"PERS\", \"ARTA\"];\n  const bgcolors = [\n    \"lightgray\",\n    \"lightpink\",\n    \"lightgreen\",\n    \" lightsalmon\",\n    \"lightblue\",\n    \"gold\",\n  ];\n  const filter = () => {\n    setcat(0);\n    setstars(0);\n    setcheck(0);\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://dashybackend.herokuapp.com/getnotes`)\n      .then((response) => {\n        let catfilter =\n          cat > 0\n            ? response.data.filter((dataset) => dataset.cat === cat)\n            : response.data;\n        setallnotes(catfilter.filter((dataset) => dataset.stars > stars - 1));\n        setloading(false);\n      });\n  }, [stars, cat, gliederung]);\n  function StarsGen() {\n    let starsall = [];\n    for (let i = 0; i < 5; i++) {\n      starsall.push(\n        <img\n          className=\"starSymbols\"\n          src={stars > i ? stargold : starblack}\n          alt=\"star\"\n          key={i}\n          onClick={() => setstars(i + 1)}\n        />\n      );\n    }\n    return starsall;\n  }\n  function StarsHave(nrofstars) {\n    let starsall = [];\n    for (let i = 0; i < 5; i++) {\n      starsall.push(\n        <img\n          className=\"starSymbolsSmall\"\n          src={nrofstars.nrofstars > i ? stargold : starblack}\n          alt=\"star\"\n          key={i}\n        />\n      );\n    }\n    return starsall;\n  }\n  const addnote = () => {\n    onAddClick(18);\n  };\n  const glied = () => {\n    gliederung === 1 ? setgliederung(0) : setgliederung(1);\n  };\n\n  const notechosen = (cat, stars, id, title, note) => {\n    console.log(cat, stars, check, id, title, note);\n    setcheck(check + 1);\n    check > 0 && onAddClick(19, cat, stars, id, title, note);\n    setcat(cat);\n    setstars(stars);\n  };\n  return (\n    <div className=\"containerColumn\">\n      <div className=\"bigTextcolumnNotes\">\n        <div className=\"iconscontainer\">\n          {stars > 0 || cat > 0 ? (\n            <img\n              className=\"icons\"\n              src={filteron}\n              alt=\"filteron\"\n              onClick={filter}\n            />\n          ) : (\n            <img\n              className=\"icons\"\n              src={filteroff}\n              alt=\"filteroff\"\n              onClick={filter}\n            />\n          )}\n\n          <img\n            className=\"icons\"\n            src={gliederung === 1 ? gliedboxes : gliedreihen}\n            alt=\"how to align\"\n            onClick={glied}\n          />\n          <img className=\"icons\" src={plus} alt=\"back\" onClick={addnote} />\n        </div>\n        <div className=\"containernotes\">\n          {loading === false ? (\n            allnotes.map((data, i) => {\n              return (\n                <div\n                  key={\"notes\" + i}\n                  className={\n                    gliederung === 0 ? \"papernotesreihen\" : \"papernotesboxes\"\n                  }\n                  style={{\n                    backgroundColor: bgcolors[data.cat],\n                  }}\n                  onClick={() =>\n                    notechosen(\n                      data.cat,\n                      data.stars,\n                      data.id,\n                      data.title,\n                      data.note\n                    )\n                  }\n                >\n                  <div className=\"titelzeile\">\n                    {data.title === null ? \"...\" : data.title}\n                    <div className=\"containerstars\">\n                      <StarsHave nrofstars={data.stars} />\n                    </div>\n                  </div>\n                  {data.note}\n                </div>\n              );\n            })\n          ) : (\n            <div>Fetching data....</div>\n          )}\n        </div>\n        <div className=\"containercat\">\n          <StarsGen />\n        </div>\n        <div className=\"containercat\">\n          {categories.map((data, i) => {\n            return (\n              <div\n                key={\"cat\" + i}\n                className=\"containercat\"\n                style={{\n                  backgroundColor: bgcolors[i + 1],\n                  fontWeight: cat === i + 1 ? \"bold\" : \"normal\",\n                }}\n                onClick={() => setcat(i + 1)}\n              >\n                {data}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Flower.js",[],"/Users/ion/Documents/own projects/minuut/src/ShowOneNote.js",["170","171"],"import React, { useState } from \"react\";\nimport plus from \"../src/images/+.png\";\nimport back from \"../src/images/back.png\";\nimport starblack from \"../src/images/starblack.png\";\nimport stargold from \"../src/images/stargold.png\";\nimport { setTokenSourceMapRange } from \"typescript\";\nimport Swal from \"sweetalert2\";\n\nexport default function ShowOneNote({\n  onAddClick,\n  whichIndex,\n  cat,\n  stars,\n  idSingleNote,\n  title,\n  note,\n}) {\n  const [changes, setchanges] = useState(0);\n  const [herecat, setherecat] = useState(cat);\n  const [herestars, setherestars] = useState(stars);\n  const [hereid, sethereid] = useState(idSingleNote);\n  const [heretitle, setheretitle] = useState(title);\n  const [herenote, setherenote] = useState(note);\n  const categories = [\"TEXT\", \"BOOK\", \"IDEA\", \"PERS\", \"ARTA\"];\n  const bgcolors = [\n    \"lightgray\",\n    \"lightpink\",\n    \"lightgreen\",\n    \" lightsalmon\",\n    \"lightblue\",\n    \"gold\",\n  ];\n\n  function StarsGen() {\n    let starsall = [];\n    for (let i = 0; i < 5; i++) {\n      starsall.push(\n        <img\n          className=\"starSymbols\"\n          src={herestars > i ? stargold : starblack}\n          alt=\"star\"\n          key={i}\n          onClick={() => setherestars(i + 1)}\n        />\n      );\n    }\n    return starsall;\n  }\n\n  const goback = () => {\n    changes === 0 ? onAddClick(17) : alertandreset();\n  };\n  const alertandreset = () => {\n    setchanges(0);\n    Swal.fire({\n      title: \"Hey!\",\n      text: \"You changed something!\",\n      confirmButtonText: \"OK\",\n    });\n  };\n\n  async function savenote() {\n    const data = {\n      stars: herestars,\n      cat: herecat,\n      title: heretitle,\n      note: herenote,\n    };\n    await fetch(\n      \"https://dashybackend.herokuapp.com/changeonenote/\".concat(hereid),\n      {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    Swal.fire({\n      title: \"Nice!\",\n      text: \"note saved...\",\n      icon: \"success\",\n      confirmButtonText: \"OK\",\n    });\n    onAddClick(17);\n  }\n  const changed = (i) => {\n    setherecat(i + 1);\n    setchanges(1);\n  };\n\n  return (\n    <div className=\"containerColumn\">\n      <div className=\"bigTextcolumn\">\n        <div className=\"iconscontainer\">\n          <img className=\"icons\" src={back} alt=\"back\" onClick={goback} />\n          <img className=\"icons\" src={plus} alt=\"back\" onClick={savenote} />\n        </div>\n        <div\n          className=\"containernotes\"\n          style={{\n            backgroundColor: herecat > 0 ? bgcolors[herecat] : \"transparent\",\n          }}\n        >\n          <textarea\n            name=\"title\"\n            className=\"title\"\n            autoFocus\n            type=\"text\"\n            placeholder={heretitle === undefined ? \"title...\" : undefined}\n            value={heretitle}\n            onChange={(e) => setheretitle(e.target.value)}\n            required\n          />\n\n          <textarea\n            name=\"notes\"\n            className=\"notes\"\n            type=\"text\"\n            placeholder={herenote === undefined ? \"write here...\" : undefined}\n            value={herenote}\n            onChange={(e) => setherenote(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"containercat\">\n          <StarsGen />\n        </div>\n        <div className=\"containercat\">\n          {categories.map((data, i) => {\n            return (\n              <div\n                key={\"cat\" + i}\n                className=\"containercat\"\n                style={{\n                  backgroundColor: bgcolors[i + 1],\n                  fontWeight: herecat === i + 1 ? \"bold\" : \"normal\",\n                }}\n                onClick={() => changed(i)}\n              >\n                {data}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/ion/Documents/own projects/minuut/src/Bemerkung.js",[],"/Users/ion/Documents/own projects/minuut/src/Timer.js",["172"],"import React from \"react\";\nimport Swal from \"sweetalert2\";\n\nexport default function Timer({ onGridClick }) {\n  const [counter, setCounter] = React.useState(60);\n\n  const sendit = () => {\n    Swal.fire({\n      title: \"Nice!\",\n      text: \"We hope you feel better now...\",\n      icon: \"success\",\n      confirmButtonText: \"Yes, I do...\",\n    });\n\n    window.navigator.vibrate && window.navigator.vibrate(100); //check if vibrate is supported by browser\n    onGridClick(0);\n  };\n\n  React.useEffect(() => {\n    const timer =\n      counter > 0 ? setInterval(() => setCounter(counter - 1), 1000) : sendit();\n    return () => clearInterval(timer);\n  }, [counter]);\n  return <div className=\"timer\">{counter}</div>;\n}\n","/Users/ion/Documents/own projects/minuut/src/Piano.js",[],"/Users/ion/Documents/own projects/minuut/src/Instrument.js",["173","174","175","176"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport InstrumentAudio from \"./InstrumentAudio\";\nimport getNotesBetween from \"./GetNotesBetween\";\n\nconst isRegularKey = (event) => {\n  return !event.ctrlKey && !event.metaKey && !event.shiftKey;\n};\nconst Instrument = ({ instrumentName, startNote, endNote, keyboardMap }) => {\n  const notes = getNotesBetween(startNote, endNote);\n\n  const [state, setState] = useState({\n    notesPlaying: [],\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n  }, []);\n\n  const getNoteFromKeyboardKey = (keyboardKey) => {\n    return keyboardMap[keyboardKey.toUpperCase()];\n  };\n  console.log(state.notesPlaying[0]);\n  const handleKeyDown = (e) => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n      }\n    }\n  };\n\n  const handleKeyUp = (e) => {\n    if (isRegularKey(e) && !e.repeat) {\n      const note = getNoteFromKeyboardKey(e.key);\n      if (note) {\n        setState({\n          ...state,\n          notesPlaying: state.notesPlaying.filter(\n            (notePlaying) => notePlaying !== note\n          ),\n        });\n      }\n    }\n  };\n\n  const onPlayNoteStart = (note) => {\n    setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\n  };\n\n  const onPlayNoteEnd = (note) => {\n    setState({\n      ...state,\n      notesPlaying: state.notesPlaying.filter(\n        (notePlaying) => notePlaying !== note\n      ),\n    });\n  };\n\n  //rendering piano keys\n  return (\n    <Fragment>\n      <InstrumentAudio\n        instrumentName={instrumentName}\n        notes={state.notesPlaying}\n      />\n    </Fragment>\n  );\n};\n\nexport default Instrument;\n","/Users/ion/Documents/own projects/minuut/src/InstrumentAudio.js",["177","178"],"import { useEffect, useState } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nconst InstrumentAudio = ({ instrumentName, notes }) => {\n  const [instrumentPlayer, setInstrumentPlayer] = useState(null);\n  useEffect(() => {\n    setInstrumentPlayer(AudioPlayer());\n  }, []);\n\n  useEffect(() => {\n    if (instrumentPlayer) {\n      setInstrument();\n      playNotes();\n    }\n  }, [instrumentPlayer]);\n\n  useEffect(() => {\n    if (notes && notes.length > 0) {\n      playNotes();\n    }\n  }, [notes]);\n\n  const setInstrument = () => {\n    instrumentPlayer.setInstrument(instrumentName);\n  };\n\n  const playNotes = () => {\n    if (instrumentPlayer) {\n      instrumentPlayer.playNote(notes[0]);\n    }\n  };\n\n  return null;\n};\n\nexport default InstrumentAudio;\n","/Users/ion/Documents/own projects/minuut/src/GetNotesBetween.js",[],"/Users/ion/Documents/own projects/minuut/src/Notes.js",[],"/Users/ion/Documents/own projects/minuut/src/AudioPlayer.js",[],"/Users/ion/Documents/own projects/minuut/src/AudioContext.js",[],{"ruleId":"179","severity":1,"message":"180","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":29},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"179","severity":1,"message":"187","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":30},{"ruleId":"179","severity":1,"message":"188","line":31,"column":10,"nodeType":"181","messageId":"182","endLine":31,"endColumn":12},{"ruleId":"179","severity":1,"message":"189","line":31,"column":14,"nodeType":"181","messageId":"182","endLine":31,"endColumn":19},{"ruleId":"179","severity":1,"message":"190","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"190","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":22,"column":6,"nodeType":"193","endLine":22,"endColumn":15,"suggestions":"194"},{"ruleId":"179","severity":1,"message":"195","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":29},{"ruleId":"191","severity":1,"message":"196","line":43,"column":6,"nodeType":"193","endLine":43,"endColumn":15,"suggestions":"197"},{"ruleId":"191","severity":1,"message":"196","line":27,"column":6,"nodeType":"193","endLine":27,"endColumn":15,"suggestions":"198"},{"ruleId":"179","severity":1,"message":"199","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"200","line":6,"column":16,"nodeType":"181","messageId":"182","endLine":6,"endColumn":23},{"ruleId":"191","severity":1,"message":"201","line":52,"column":6,"nodeType":"193","endLine":52,"endColumn":16,"suggestions":"202"},{"ruleId":"179","severity":1,"message":"203","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":31},{"ruleId":"179","severity":1,"message":"190","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"204","line":9,"column":18,"nodeType":"181","messageId":"182","endLine":9,"endColumn":22},{"ruleId":"179","severity":1,"message":"205","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":32},{"ruleId":"179","severity":1,"message":"205","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":32},{"ruleId":"179","severity":1,"message":"206","line":21,"column":18,"nodeType":"181","messageId":"182","endLine":21,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":23,"column":6,"nodeType":"193","endLine":23,"endColumn":15,"suggestions":"207"},{"ruleId":"179","severity":1,"message":"208","line":9,"column":9,"nodeType":"181","messageId":"182","endLine":9,"endColumn":14},{"ruleId":"191","severity":1,"message":"209","line":18,"column":6,"nodeType":"193","endLine":18,"endColumn":8,"suggestions":"210"},{"ruleId":"179","severity":1,"message":"211","line":47,"column":9,"nodeType":"181","messageId":"182","endLine":47,"endColumn":24},{"ruleId":"179","severity":1,"message":"212","line":51,"column":9,"nodeType":"181","messageId":"182","endLine":51,"endColumn":22},{"ruleId":"191","severity":1,"message":"213","line":15,"column":6,"nodeType":"193","endLine":15,"endColumn":24,"suggestions":"214"},{"ruleId":"191","severity":1,"message":"215","line":21,"column":6,"nodeType":"193","endLine":21,"endColumn":13,"suggestions":"216"},"no-unused-vars","'registerserviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'app' is defined but never used.","'id' is assigned a value but never used.","'setid' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'sendit'. Either include it or remove the dependency array.","ArrayExpression",["219"],"'StandingChestStretch1' is defined but never used.","React Hook React.useEffect has a missing dependency: 'change'. Either include it or remove the dependency array.",["220"],["221"],"'gift' is assigned a value but never used.","'setgift' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'blue', 'coffee', 'gray', and 'varName'. Either include them or remove the dependency array.",["222"],"'isNotEmittedStatement' is defined but never used.","'stop' is assigned a value but never used.","'setTokenSourceMapRange' is defined but never used.","'sethereid' is assigned a value but never used.",["223"],"'notes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleKeyDown' and 'handleKeyUp'. Either include them or remove the dependency array.",["224"],"'onPlayNoteStart' is assigned a value but never used.","'onPlayNoteEnd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'playNotes' and 'setInstrument'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'playNotes'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"232","fix":"233"},{"desc":"227","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [counter, sendit]",{"range":"241","text":"242"},"Update the dependencies array to be: [change, counter]",{"range":"243","text":"244"},{"range":"245","text":"244"},"Update the dependencies array to be: [blue, coffee, colorSet, gray, varName]",{"range":"246","text":"247"},{"range":"248","text":"242"},"Update the dependencies array to be: [handleKeyDown, handleKeyUp]",{"range":"249","text":"250"},"Update the dependencies array to be: [instrumentPlayer, playNotes, setInstrument]",{"range":"251","text":"252"},"Update the dependencies array to be: [notes, playNotes]",{"range":"253","text":"254"},[633,642],"[counter, sendit]",[2265,2274],"[change, counter]",[906,915],[1163,1173],"[blue, coffee, colorSet, gray, varName]",[645,654],[591,593],"[handleKeyDown, handleKeyUp]",[382,400],"[instrumentPlayer, playNotes, setInstrument]",[491,498],"[notes, playNotes]"]